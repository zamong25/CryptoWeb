<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <link href="https://fonts.googleapis.com/css2?family=Dosis&display=swap" rel="stylesheet"></link>
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@300&display=swap" rel="stylesheet"></link>
    <title>Home</title>
    <link href="/stylesheets/style.css" type="text/css" rel="stylesheet"></link>
</head>
<body>
    <header>
        <h2>MARTOME</h2>
    </header>
        <input type="checkbox" name="">
        <div class="icon"><img src="./Image/mart.png"></div>
        <div class="contentNode">
            <div class="martList">
                <div class="selectCity">
                    <input type="button" class="btn_city" id="seoul" value="서울">
                    <input type="button" class="btn_city" id="gyongki" value="경기">
                    <input type="button" class="btn_city" id="incheon" value="인천">
                    <input type="button" class="btn_city" id="busan" value="부산">
                    <input type="button" class="btn_city" id="daegu" value="대구">
                    <input type="button" class="btn_city" id="gwangju" value="광주">
                    <input type="button" class="btn_city" id="daejeon" value="대전">
                    <input type="button" class="btn_city" id="ulsan" value="울산">
                    <input type="button" class="btn_city" id="gangwon" value="강원">
                    <input type="button" class="btn_city" id="gyungnam" value="경남">
                    <input type="button" class="btn_city" id="gyungbuk" value="경북">
                    <input type="button" class="btn_city" id="jeonnam" value="전남">
                    <input type="button" class="btn_city" id="jeonbuk" value="전북">
                    <input type="button" class="btn_city" id="chungnam" value="충남">
                    <input type="button" class="btn_city" id="chungbuk" value="충북">
                    <input type="button" class="btn_city" id="sejong" value="세종">
                    <input type="button" class="btn_city" id="jeju" value="제주">
                </div>
                <div class="dash"></div>
                <div class="showCity">전국</div>
                <div class="showMartsList"></div>
            </div>
            <iframe class="mart_info" id="mart_info" scrolling="yes" style="display: none;"></iframe>
        </div>
        <div class="map_wrap">
            <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>
            <!-- <div class="custom_typecontrol radius_border">
                <span id="btnRoadmap" class="selected_btn" onclick="setMapType('roadmap')">지도</span>
                <span id="btnSkyview" class="btn" onclick="setMapType('skyview')">스카이뷰</span>
            </div>
            <div class="custom_zoomcontrol radius_border">
                <span onclick="zoomIn()">
                    <img src="https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_plus.png" alt="확대">
                </span>
                <span onclick="zoomOut()">
                    <img src="https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_minus.png" alt="축소">
                </span> -->
                <div class="custom_myplace">
                    <button type="button" id="btn_myplace">내 위치</button>
                </div>
            </div>
        </div>

        <div class="popup-box">
            <div class="popup-content">
                <div class="popup-header">
                   <h3></h3>
                   <input type="hidden" id="mart_entpId" value="">
                   <span class="popup-close-icon">&times;</span>
                   <div style="text-align: right;">
                        <input type="text" placeholder="Enter product name" style="color: gray;" id="searchItem">
                        <input type="button" value="search" id="btn_searchItem">
                    </div>
                </div>
                <div class="popup-body">
                </div>
                <div class="popup-footer">
                  <button class="btn popup-close-btn">Close</button>
                </div>
            </div>
        </div>
    <!-- pop up view for products -->
    <script type="text/javascript"
        src="//dapi.kakao.com/v2/maps/sdk.js?appkey=5b744676bffa5b44d8895f0e24ca6c62&libraries=services,clusterer"></script>
    <script type="text/javascript"
        src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="../routes/index.js"></script>
    <script>

        const popup = document.querySelector(".popup-box");
        const popupCloseBtn = popup.querySelector(".popup-close-btn");
        const popupCloseIcon = popup.querySelector(".popup-close-icon");

        $(document).ready(function(){
            //$('#mart_info').attr('src','https://place.map.kakao.com/m/232056222');
            
            showAllMart();
            $('.btn_city').on('click', showMarts);

            popupCloseBtn.addEventListener("click", popupBox);
            popupCloseIcon.addEventListener("click", popupBox);

            $('#btn_searchItem').click(searchItem);
            $('#btn_searchItem').click(function() { $('#searchItem').val('') });

            $('#btn_myplace').click(getCurrentPosBtn);
        })

        // 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다
        var placeOverlay = new kakao.maps.CustomOverlay({zIndex:1}), 
            contentNode = document.createElement('div'); // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다 

        contentNode.className = 'placeinfo_wrap';

        // 커스텀 오버레이 컨텐츠를 설정합니다
        placeOverlay.setContent(contentNode);

        var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
            mapOption = {
                center: new kakao.maps.LatLng(35.725933397715475, 127.65119069772949), // 지도의 중심좌표
                level: 13 // 지도의 확대 레벨
            };

        var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

        // 마커 클러스터러를 생성합니다
        // 마커 클러스터러를 생성할 때 disableClickZoom 값을 true로 지정하지 않은 경우
        // 클러스터 마커를 클릭했을 때 클러스터 객체가 포함하는 마커들이 모두 잘 보이도록 지도의 레벨과 영역을 변경합니다
        // 이 예제에서는 disableClickZoom 값을 true로 설정하여 기본 클릭 동작을 막고
        // 클러스터 마커를 클릭했을 때 클릭된 클러스터 마커의 위치를 기준으로 지도를 1레벨씩 확대합니다
        var clusterer = new kakao.maps.MarkerClusterer({
            map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체
            averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
            minLevel: 10, // 클러스터 할 최소 지도 레벨
            disableClickZoom: true // 클러스터 마커를 클릭했을 때 지도가 확대되지 않도록 설정한다
        });

        map.setCenter(mapOption.center);

        var geocoder = new kakao.maps.services.Geocoder(); // 주소-좌표 변환 객체를 생성합니다

        var ps = new kakao.maps.services.Places(map); // 장소 검색 객체를 생성합니다

        /**
         * custom image
         **/
        var imageSrc = './Image/marker_yellow.png', // 마커이미지의 주소입니다    
            imageSize = new kakao.maps.Size(35, 40), // 마커이미지의 크기입니다
            imageOption = { offset: new kakao.maps.Point(17, 59) }; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.

        // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다
        var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imageOption)

        var markers = [];
        // 주소로 좌표를 검색합니다
        <% for (var i = 0; i < mart.list.length; i++) { %>
            geocoder.addressSearch('<%= mart.list[i].address %>', function (result, status) {

                // 정상적으로 검색이 완료됐으면 
                if (status === kakao.maps.services.Status.OK) {

                    var coords = new kakao.maps.LatLng(result[0].y, result[0].x);

                    // 결과값으로 받은 위치를 마커로 표시합니다
                    var marker = new kakao.maps.Marker({
                        map: map,
                        position: coords,
                        image: markerImage,
                        clickable: true // 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다
                    });

                    // 인포윈도우로 장소에 대한 설명을 표시합니다
                    const infowindow = new kakao.maps.InfoWindow({
                        content: '<div id="mart_name" style="width:auto;text-align:center;padding:6px 0;border-radius:10px;">' 
                                        + '<%= mart.list[i].name %>' 
                                + '</div>'
                    });

                    kakao.maps.event.addListener(marker, "mouseover", function() {
                        infowindow.open(map, marker);
                    });

                    kakao.maps.event.addListener(marker, "mouseout", function() {
                        infowindow.close();
                    });

                    // 마커에 클릭이벤트를 등록합니다
                    kakao.maps.event.addListener(marker, 'click', function () {

                        // 커스텀 오버레이를 숨깁니다 
                        placeOverlay.setMap(null);

                        // make the mart list hidden
                        $('.martList').attr('style', 'display: none;');

                        // show info on the left
                        ps.keywordSearch('<%= mart.list[i].name %>', placesSearchCB);
                        
                        $('#mart_entpId').attr('value', '<%= mart.list[i].entpId %>');
                        console.log($('#mart_entpId').val());

                        $.ajax({
                            url: 'http://localhost:3000',
                            type: 'POST',
                            data: { 'martName' : '<%= mart.list[i].name %>', 'entpId' : '<%= mart.list[i].entpId %>' },
                            success: showProducts,
                            error: function(err) {
                                console.log(err);
                            }
                        });
                    });
                    // for cluster
                    markers.push(marker);
                }
                // 클러스터러에 마커들을 추가합니다
                clusterer.addMarkers(markers);
            });
        <% } %>

        function showProducts(res) {
            console.log("get products successfully");
            console.log(res);

            var content = "";
            console.log(res.martName);

            if (res.martName) {
                popup.querySelector("h3").innerHTML = res.martName;
            }
            else {
                var martName = $("#mart_name").text();
                popup.querySelector("h3").innerHTML = martName;
            }

            for (var i = 0; i < res.list.length; i++) {
                content += '<div class="oneProduct" style="border: 1px; border-color:gray;">';
                content +=      '<div class="goodName" style="font-size: 15px; font-weight: bold;">' + res.list[i].goodName + '</div>'; 
                content +=      '<div class="goodPrice" style="font-size: 13px; color: red;"> Price : ' + res.list[i].goodPrice + '</div>'; 
                content +=      '<div class="options" style="font-size: 11px; color: blue;">';
                content +=          'discount : ' + res.list[i].goodDcYn;
                content +=      '</div>';
                if (res.list[i].detailMean != 0) 
                    content += '<div class="desc" style="font-size: 11px;">' + res.list[i].detailMean + '</div>'; 
                content += '</div> <br>';
            }
            popup.querySelector(".popup-body").innerHTML = content;
        }

        // 마커 클러스터러에 클릭이벤트를 등록합니다
        // 마커 클러스터러를 생성할 때 disableClickZoom을 true로 설정하지 않은 경우
        // 이벤트 헨들러로 cluster 객체가 넘어오지 않을 수도 있습니다
        kakao.maps.event.addListener(clusterer, 'clusterclick', function (cluster) {
            // 현재 지도 레벨에서 1레벨 확대한 레벨
            var level = map.getLevel() - 1;

            // 지도를 클릭된 클러스터의 마커의 위치를 기준으로 확대합니다
            map.setLevel(level, { anchor: cluster.getCenter() });
        });

        // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다
        var zoomControl = new kakao.maps.ZoomControl();
        map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);

        /**
         * execute event 
         **/
        // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다
        function placesSearchCB(data, status, pagination) {
            if (status === kakao.maps.services.Status.OK) {
                // 정상적으로 검색이 완료됐으면 검색 목록과 마커를 표출합니다
                displayPlaceInfo(data[0]);
                alert('검색 완료');
            } else if (status === kakao.maps.services.Status.ZERO_RESULT) {
                alert('검색 결과가 존재하지 않습니다.');
                return;
            } else if (status === kakao.maps.services.Status.ERROR) {
                alert('검색 결과 중 오류가 발생했습니다.');
                return;
            }
        }

        // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다
        function displayPlaceInfo(place) {
            $('#mart_info').attr('style','display: block;');
            $("#mart_info").attr('src', 'https://place.map.kakao.com/m/'+ place.place_url.substring(27));

            // windowinfo
            var content = '<div class="placeinfo">' +
                           '   <div class="title">' + place.place_name + '</div>';

            if (place.road_address_name) {
                content += '   <span title="' + place.road_address_name + '">' + place.road_address_name + '</span>' +
                           '   <span class="jibun" title="' + place.address_name + '">(지번 : ' + place.address_name + ')</span>';
            }
            else {
                content += '    <span title="' + place.address_name + '">' + place.address_name + '</span>';
            }                
        
            content += '    <span class="tel">' + place.phone + '</span>' + 
                          '</div>' + 
                        '<div class="after"></div>';

            contentNode.innerHTML = content;
            placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));
            placeOverlay.setMap(map);

            $(".title").click(function() {
                popupBox();
            });
        }

        function popupBox() {
            popup.classList.toggle("open");
        }

        /**
         *  adjust view size
         **/
        // 지도타입 컨트롤의 지도 또는 스카이뷰 버튼을 클릭하면 호출되어 지도타입을 바꾸는 함수입니다
        function setMapType(maptype) {
            var roadmapControl = document.getElementById('btnRoadmap');
            var skyviewControl = document.getElementById('btnSkyview');
            if (maptype === 'roadmap') {
                map.setMapTypeId(kakao.maps.MapTypeId.ROADMAP);
                roadmapControl.className = 'selected_btn';
                skyviewControl.className = 'btn';
            } else {
                map.setMapTypeId(kakao.maps.MapTypeId.HYBRID);
                skyviewControl.className = 'selected_btn';
                roadmapControl.className = 'btn';
            }
        }

        // 지도 확대, 축소 컨트롤에서 확대 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
        function zoomIn() {
            map.setLevel(map.getLevel() - 1);
        }

        // 지도 확대, 축소 컨트롤에서 축소 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
        function zoomOut() {
            map.setLevel(map.getLevel() + 1);
        }

        // 지도 위에 표시되고 있는 마커를 모두 제거합니다
        function removeMarker() {
            for ( var i = 0; i < markers.length; i++ ) {
                markers[i].setMap(null);
            }   
            markers = [];
        }

        // searchItem in popup box
        function searchItem() {
            var itemName = $('#searchItem').val();
            var martName2 = popup.querySelector("h3").innerHTML;
            var entpId = $('#mart_entpId').val();
            console.log(entpId);
            
            // if (res.item[i].goodName include itemName, show 
            $.ajax({
                url: 'http://localhost:3000/searchItem',
                type: 'POST',
                data: { 'martName' : martName2, 'entpId': entpId, 'itemName' : itemName },
                success: showProducts,
                error: function(err) {
                    console.log(err);
                }
            });
        }

        // get current location
        function locationLoadSuccess(pos){
            // 현재 위치 받아오기
            var currentPos = new kakao.maps.LatLng(pos.coords.latitude,pos.coords.longitude);

            // 지도 이동(기존 위치와 가깝다면 부드럽게 이동)
            map.panTo(currentPos);

            // 마커 생성
            var marker = new kakao.maps.Marker({
                position: currentPos
            });

            // 기존에 마커가 있다면 제거
            marker.setMap(null);
            marker.setMap(map);
        };

        function locationLoadError(pos) {
            alert('위치 정보를 가져오는데 실패했습니다.');
        };

        function getCurrentPosBtn() {
            navigator.geolocation.getCurrentPosition(locationLoadSuccess,locationLoadError);
            map.setLevel(map.getLevel() - 7);
        }


        var showMarts = function(e) {
            var city = e.currentTarget.value;
            $('.showCity').text(city);
            $('.showCity').attr('style', 'text-decoration: underline; text-underline-offset: 5px;');
            var content = "";

            <% for (var i = 0; i < mart.list.length; i++) { %>       
                if ('<%= mart.list[i].address %>'.includes(city)) {
                    content += '<div style="border: 1px; border: 1px solid #919191; border-radius: 5px; margin-left: 10px; margin-bottom: 15px; padding: 5px; width: 280px;">';
                    content +=      '<div style="font-size: 15px; padding-bottom: 5px; font-weight: bold;"><%= mart.list[i].name %></div>';
                    content +=      '<div style="font-size: 9px; color: #2081bd; font-weight: bold;"><%= mart.list[i].address %></div>';
                    content += '</div>'
                }
            <% } %>

            $('.showMartsList').html(content);
        }

        function showAllMart() {
            var content = "";

            <% for (var i = 0; i < mart.list.length; i++) { %>       
                    content += '<div style="border: 1px; border: 1px solid #919191; border-radius: 5px; margin-top: 10px; margin-left: 10px; margin-bottom: 15px; padding: 5px; width: 280px;">';
                    content +=      '<div style="font-size: 15px; padding-bottom: 5px; font-weight: bold;"><%= mart.list[i].name %></div>';
                    content +=      '<div style="font-size: 9px; color: #2081bd; font-weight: bold;"><%= mart.list[i].address %></div>';
                    content += '</div>'
            <% } %>

            $('.showMartsList').html(content);
        }

    </script>
</body>

</html>